{{- if .Values.externalSecretsv2.enabled }}
{{- $environment := ((.Values.global).environment) | default (.Release.Namespace | regexFind "^(prod|staging|stage)" | default "prod") }}
{{- $team := ((.Values.global).team) | default .Values.team | default ((.Values.podLabels).team) | default "core" }}
{{- $application := ((.Values.global).application) | default .Values.application | default .Release.Name }}
{{- $cloudProvider := eq $environment "prod" | ternary "aws" "gcp" }}
{{- $secretStore := eq $cloudProvider "aws" | ternary "aws-secretsmanager" "gcp-secret-manager" }}
{{- range .Values.externalSecretsv2.secrets }}
{{- $secretName := . }}
{{- $secretPath := printf "%s/%s/%s/%s" $environment $team $application $secretName }}
---
apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: {{ $application }}-{{ $secretName }}-secret
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "application.labels" $ | nindent 4 }}
    secret-management.livspace.com/version: v2
    secret-management.livspace.com/environment: {{ $environment }}
    secret-management.livspace.com/team: {{ $team }}
    secret-management.livspace.com/application: {{ $application }}
spec:
  refreshInterval: 1h
  secretStoreRef:
    name: {{ $secretStore }}
    kind: ClusterSecretStore
  target:
    name: {{ $application }}-{{ $secretName }}-secret
    creationPolicy: Owner
  dataFrom:
  - extract:
      key: {{ $secretPath }}
{{- end }}
{{- end }}
