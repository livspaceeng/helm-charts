apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "gateway.resourceName" . }}
  labels:
      {{- include "gateway.labels" . | nindent 4 }}
  namespace: {{ $.Release.Namespace | quote }}
spec:
{{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicas }}
{{- end }}
  selector:
    matchLabels:
      {{- include "gateway.selectorLabels" . | nindent 6 }}
{{- with .Values.strategy }}
  strategy:
{{ toYaml . | trim | indent 4 }}
{{- end }}
  template:
    metadata:
      labels:
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- include "gateway.selectorLabels" . | nindent 8 }}
      annotations:
        {{- $annotations := (dict "checksum/config" (include (print $.Template.BasePath "/nginx-configmap.yaml") $ | sha256sum )) -}}
        {{- $annotations | toYaml | nindent 8 }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      namespace: {{ $.Release.Namespace | quote }}
    spec:
      serviceAccountName: {{ include "gateway.serviceAccountName" $ }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if $.Values.nginx.image.pullSecrets }}
      imagePullSecrets:
      {{- range $.Values.nginx.image.pullSecrets }}
        - name: {{ . }}
      {{- end }}
      {{- end }}
      containers:
        - name: nginx
          image: {{ .Values.nginx.image.registry }}/{{ .Values.nginx.image.repository }}:{{ .Values.nginx.image.tag }}
          imagePullPolicy: {{ $.Values.nginx.image.pullPolicy }}
          args:
            {{- range $key, $value := .Values.nginx.args }}
            - "-{{ $key }} {{ $value }}"
            {{- end }}
          volumeMounts:
            {{- if .Values.extraVolumeMounts }}
            {{ toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: tmp
              mountPath: /tmp
            - name: docker-entrypoint-d-override
              mountPath: /docker-entrypoint.d
          ports:
            - name: http-metrics
              containerPort: {{ include "gateway.serverHttpListenPort" $ }}
              protocol: TCP
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.containerSecurityContext | nindent 12 }}
          env:
            {{- with .Values.env }}
              {{ toYaml . | nindent 12 }}
            {{- end }}
          envFrom:
            {{- with .Values.extraEnvFrom }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.extraContainers }}
        {{ toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      volumes:
        - name: nginx-config
          configMap:
            name: {{ include "gateway.fullname" $ }}
        - name: docker-entrypoint-d-override
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
