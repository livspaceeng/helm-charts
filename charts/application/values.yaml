# -- Same as nameOverride but for the namespace.
namespaceOverride: ""

# -- Same as nameOverride but for the component.
componentOverride: ""

# -- Same as nameOverride but for the partOf.
partOfOverride: ""

##########################################################
# Name of the application.
##########################################################
applicationName: "application"

##########################################################
# Global labels
# These labels will be added on all resources,
# and you can add additional labels from below
# on individual resource
##########################################################

cronJob:
  enabled: false
  jobs:
    # db-migration:
    #   schedule: "* * * 8 *"
    #   env:
    #     KEY:
    #       value: VALUE
    #   image:
    #     repository: docker.io/nginx
    #     tag: v1.0.0
    #     digest: '' # if set to a non empty value, digest takes precedence on the tag
    #     imagePullPolicy: IfNotPresent
    #   command: ["/bin/bash"]
    #   args: ["-c","sleep 5000"]
    #   resources:
    #     requests:
    #         memory: 5Gi
    #         cpu: 1

##########################################################
# Deployment
##########################################################
deployment:

  enabled: true
  # By default deploymentStrategy is set to rollingUpdate with maxSurge of 25% and maxUnavailable of 25%
  # You can change type to `Recreate` or can uncomment `rollingUpdate` specification and adjust them to your usage.
  strategy:
    type: RollingUpdate
    # rollingUpdate:
    #   maxSurge: 25%
    #   maxUnavailable: 25%

  #terminationGracePeriodSeconds
  gracePeriod: 30

  #container lifecycle
  lifecycle:
    enabled: false
    preStop:
      exec:
        command:
          - /bin/sh
          - -c
          - sleep 60
  # Select nodes to deploy which matches the following labels
  nodeSelector:
    # cloud.google.com/gke-nodepool: default-pool

  # Init containers which runs before the app container
  hostAliases:
  # - ip: "127.0.0.1"
  #   hostnames:
  #   - "foo.local"
  #   - "bar.local"
  # - ip: "10.1.2.3"
  #   hostnames:
  #   - "foo.remote"
  #   - "bar.remote"

  # Init containers which runs before the app container
  initContainers:
#      init-contaner:
#        image: busybox
#        imagePullPolicy: IfNotPresent
#        command: ['/bin/sh']

  # Additional labels for Deployment
  additionalLabels:
    # key: value

  # Additional label added on pod which is used in Service's Label Selector
  podLabels:
    # env: prod

  # Annotations on deployments
  annotations:

  # Additional Pod Annotations added on pod created by this Deployment
  additionalPodAnnotations:
    # key: value

  # Annotations for fluentd Configurations
  fluentdConfigAnnotations:
    # fluentd:
    #   regex: hello
    #   timeFormat: world

  # Replicas to be created
  replicas:

  # Secrets used to pull image
  imagePullSecrets: ""

  # If want to mount Envs from configmap or secret
  envFrom:
#    production-cm:
#      type: configmap
#      nameSuffix: my-configmap
#    logging-config:
#      type: configmap
#      nameSuffix: your-configmap
#    postgres-config:
#      type: secret
#      nameSuffix: postgres

  # Environment variables to be passed to the app container
  env:
#    ENVIRONMENT:
#       value: "dev"
#    FREQUENCY:
#       valueFrom:
#          configMapKeyRef:
#             name: config
#             key: frequency
  externalConfigMaps: []
#    - name: bumblebee-argo-bumblebee-cm
#      path: /usr/src/app
#      files:
#        - .env
#        - application-config.yaml

  # Volumes to be added to the pod
  volumes: []
#    - name: configmap-volume
#      configMap:
#        name: test-config-map
#        defaultMode: 420

  # Mount path for Volumes
  volumeMounts: []
#    - name: test-config-map
#      mountPath: /etc/app/app.env
#      subPath: app.env

  # Taint tolerations for nodes
  tolerations: []
    # - key: "dedicated"
    #   operator: "Equal"
    #   value: "app"
    #   effect: "NoSchedule"

  # Pod affinity and pod anti-affinity allow you to specify rules about how pods should be placed relative to other pods.
  affinity: {}
  #  nodeAffinity:
  #    requiredDuringSchedulingIgnoredDuringExecution:
  #      nodeSelectorTerms:
  #      - matchExpressions:
  #        - key: disktype
  #          operator: In
  #          values:
  #          - ssd

  # Topology spread constraints
  topologySpreadConstraints: []
    # - maxSkew: 1
    #   topologyKey: kubernetes.io/hostname
    #   whenUnsatisfiable: ScheduleAnyway
    #   labelSelector:
    #     matchExpressions:
    #     - key: disktype
    #       operator: In
    #       values:
    #       - ssd
    # - maxSkew: 1
    #   topologyKey: topology.kubernetes.io/zone
    #   whenUnsatisfiable: ScheduleAnyway
    #   labelSelector:
    #     matchExpressions:
    #     - key: disktype
    #       operator: In
    #       values:
    #       - ssd

  # Image of the app container
  image:
    repository: repository/image-name
    tag: ''
    digest: '' # if set to a non empty value, digest takes precedence on the tag
    pullPolicy: IfNotPresent
  dnsConfig:
    # options:
    # - name: ndots
    #   value: '1'
  # Startup, Readiness and Liveness probes
  startupProbe:
    enabled: false
    failureThreshold: 30
    periodSeconds: 10
    # Must specify either one of the following field when enabled
    httpGet: {}
    exec: {}
    tcpSocket: {}

  readinessProbe:
    enabled: false
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 10
    # Must specify either one of the following field when enabled
    httpGet: {}
    exec: {}
    tcpSocket: {}

  livenessProbe:
    enabled: false
    failureThreshold: 3
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 1
    initialDelaySeconds: 10
    # Must specify either one of the following field when enabled
    httpGet: {}
    exec: {}
    tcpSocket: {}

  # Resources to be defined for pod
  resources:
    limits:
      memory: 256Mi
      cpu: 0.5
    requests:
      memory: 128Mi
      cpu: 0.1

#  Security Context at Container Level
  containerSecurityContext:
    readOnlyRootFilesystem: true
    runAsNonRoot: true

  openshiftOAuthProxy:
    enabled: false
    port: 8080   # Port on which application is running inside container
    secretName: "openshift-oauth-proxy-tls"
    image: openshift/oauth-proxy:latest       # If you have a custom container for oauth-proxy that can be updated here
    disableTLSArg: false # If disabled --http-address=:8081 will be used instead of --https-address=:8443 , to be used when an ingress is used for application
  # Add additional containers besides init and app containers
  additionalContainers:
  # - name: sidecar-contaner
  #   image: busybox
  #   imagePullPolicy: IfNotPresent
  #   command: ['/bin/sh']


  # Security Context for the pod

  securityContext:
    # fsGroup: 2000

  # Command for primary container
  command: []

  # Args for primary contaner
  args: []

  # List of ports for the primary container
  ports:
  #- containerPort: 8080
  #  name: http
  #  protocol: TCP
  #- containerPort: 8778
  #  name: jolokia
  #  protocol: TCP
  #- containerPort: 8443
  #  name: https
  #  protocol: TCP


##########################################################
# Service object for servicing pods
##########################################################
service:
  enabled: true
  additionalLabels:
    # expose: "true"

  annotations:
  ports:
    - port: 8080
      name: http
      protocol: TCP
      targetPort: 8080
  type: ClusterIP

##########################################################
# Ingress object for exposing services
##########################################################
ingress:
  enabled: false

  # Name of the ingress class
  ingressClassName: ''

  # Port of the service that serves pods
  servicePort: http

  #Set pathType: default is ImplementationSpecific; Options: Exact, Prefix
  pathType: ImplementationSpecific

  # List of host addresses to be exposed by this Ingress
  hosts:
    - host: chart-example.local
      # paths:
      # - path: /
      #  pathType: ''
      #  serviceName: ''
      #  servicePort: ''
  # Additional labels for this Ingress
  additionalLabels:

  # Add annotations to this Ingress
  annotations:
    # kubernetes.io/ingress.class: external-ingress
    # ingress.kubernetes.io/rewrite-target: /
    # ingress.kubernetes.io/force-ssl-redirect: true

  # TLS details for this Ingress
  tls:
    # Secrets must be manually created in the namespace.
    # - secretName: chart-example-tls
    #   hosts:
    #     - chart-example.local

##########################################################
# Role Based Access Control (RBAC)
##########################################################
rbac:
  enabled: true

  # Service Account to use by pods
  serviceAccount:
    enabled: false
    name: ""

    # Additional Labels on service account
    additionalLabels:
      # key: value

    # Annotations on service account
    annotations:
      # key: value

  # Create Roles (Namespaced)
  roles:
  # - name: configmaps
  #   rules:
  #   - apiGroups:
  #     - ""
  #     resources:
  #     - configmaps
  #     verbs:
  #     - get
  # - name: secrets
  #   rules:
  #   - apiGroups:
  #     - ""
  #     resources:
  #     - secrets
  #     verbs:
  #     - get

##########################################################
# Additional ConfigMaps
##########################################################
configMap:
  enabled: false
  additionalLabels:
    # key: value
  annotations:
    # key: value
  files:
    # nameSuffix of configMap
#    code-config:
#       key1: value1
#       key2: value2
#    dev-config:
#       key1: value1
#       key2: value2

##########################################################
# SealedSecrets
##########################################################
sealedSecret:
  enabled: false
  additionalLabels:
    #key: value
  annotations:
    #key: value
  files:
#  #nameSuffix of sealedSecret
#     example:
#       encryptedData:
#         name: AgBghrdepGMKmp/rdtJrkBv/CWpJbtmoMsbKQ7QiZZ2kUoLeeTbrDnhmJY03kWKkNW4kN/sQRf6r1vvBEaR4nkHt5f/ayAeaH3NveI3bdb0xv/svvWjyjehwqwr/kNEAVWxRoUij0Y7MyIEAr4hnV2UnrhgvcjPJLNA8bK6spA+kuT328Vpyceyvnm6yArNn1aYlEckaFHrnculHWRpG73iRYxS5GWAY7EdkLXx7OLLWoopHtLcupklYyPfraJzPvBNZ5/PsyjlUBvoQbGV3cZlrdEj1WHj2S1RQ13ddf2WGtMHmY83t9B3LFZAZuA7BBt4rjludbwQm3/tJ5Kas1dDsSIRIIF7MTeum9YfRB8XUz8IxVKQ/JDskeynrWe3VzN/3HFVnv9GGFy+BCVXZKVU/roIRancz+nXkyoOHS722ZpBi53dfLItoS5dG+0EzArMTQzK/KXHz3b1rxp5oWWDNt3WggTiSg2zwy5ZR8VV2ToTDof6UrFmbCZv/kKriyxbVSxIo3KFnvuRiUZ5MwC0TNut4mW3LKyJfHqkUuLa1mYV6tKF58qBnoj/+JaibAIBEudT9hms5U52p7/jKmgHuop7XPEsz4OVwER//Vbv7X6ctoXtyPu6mZyOfOyJHM8Qj/H7/gwMBYhZHQ96DWrVmZOsWSRpZGJni4Xm7rgt2cFj6UtWv6lvl8aOi/HSZVC3TwWZ9mQrk
#       annotations:
#         key: value
#       labels:
#         key: value
#       clusterWide: true
#     example2:
#       encryptedData:
#         name: AgBghrdepGMKmp/rdtJrkBv/CWpJbtmoMsbKQ7QiZZ2kUoLeeTbrDnhmJY03kWKkNW4kN/sQRf6r1vvBEaR4nkHt5f/ayAeaH3NveI3bdb0xv/svvWjyjehwqwr/kNEAVWxRoUij0Y7MyIEAr4hnV2UnrhgvcjPJLNA8bK6spA+kuT328Vpyceyvnm6yArNn1aYlEckaFHrnculHWRpG73iRYxS5GWAY7EdkLXx7OLLWoopHtLcupklYyPfraJzPvBNZ5/PsyjlUBvoQbGV3cZlrdEj1WHj2S1RQ13ddf2WGtMHmY83t9B3LFZAZuA7BBt4rjludbwQm3/tJ5Kas1dDsSIRIIF7MTeum9YfRB8XUz8IxVKQ/JDskeynrWe3VzN/3HFVnv9GGFy+BCVXZKVU/roIRancz+nXkyoOHS722ZpBi53dfLItoS5dG+0EzArMTQzK/KXHz3b1rxp5oWWDNt3WggTiSg2zwy5ZR8VV2ToTDof6UrFmbCZv/kKriyxbVSxIo3KFnvuRiUZ5MwC0TNut4mW3LKyJfHqkUuLa1mYV6tKF58qBnoj/+JaibAIBEudT9hms5U52p7/jKmgHuop7XPEsz4OVwER//Vbv7X6ctoXtyPu6mZyOfOyJHM8Qj/H7/gwMBYhZHQ96DWrVmZOsWSRpZGJni4Xm7rgt2cFj6UtWv6lvl8aOi/HSZVC3TwWZ9mQrk

##########################################################
# Additional Secrets
##########################################################
secret:
  enabled: false
  additionalLabels:
    # key: value
  annotations:
    # key: value
  files:
#  nameSuffix of Secret
#   credentials:
#     data:
#       secretKey1: secretValue1
#       secretKey2: secretValue2
#   password:
#     data:
#       secretKey1: secretValue1
#       secretKey2: secretValue2

##########################################################
# Service Monitor to collect Prometheus metrices
##########################################################
serviceMonitor:
  enabled: false

  # Additional labels
  additionalLabels:
    # key: value

  # Additional annotations
  annotations:
    # key: value

  # List of the endpoints of service from which prometheus will scrape data
  endpoints:
  - interval: 5s
    path: /actuator/prometheus
    port: http

##########################################################
# HPA - Horizontal Pod Autoscaling
##########################################################
autoscaling:
# enabled is a boolean flag for enabling or disabling autoscaling
  enabled: false
# additionalLabels defines additional labels
  additionalLabels:
    # key: value
# annotations defines annotations in key value pair
  annotations:
    # key: value
# minReplicas sets the minimum number of replicas
  minReplicas: 1
# maxReplicas sets the maximum number of replicas
  maxReplicas: 10
# metrics is the list of metrics used for hpa
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
         type: Utilization
         averageUtilization: 60
  - type: Resource
    resource:
      name: memory
      target:
         type: Utilization
         averageUtilization: 60

##########################################################
# Pod disruption budget - PDB
##########################################################
pdb:
  enabled: false
  minAvailable: 1
# maxUnavailable: 1

networkPolicy:
  enabled: false
  ingress: []
  egress: []
    # toApps:
    #   - name: AppName
    #     namespace: TargetNamespace
    #     httpPorts: [8080]
    #     tcpPorts: [8081]
    #     udpPorts: []